CREATE TABLE students (
  id_aluno SERIAL PRIMARY KEY,       
  nome VARCHAR(100) NOT NULL,        
  idade INT,                         
  email VARCHAR(255) UNIQUE NOT NULL
);

INSERT INTO students (nome, idade, email) VALUES
(' João Silva', 21, 'j.silva@email.com'),
('marcio Oliveira', 22, 'm.oliveira@email.com'),
(' carlos Santos', 20, 'c.santos@email.com');

select * from students


CREATE TABLE discipline (
  id_disciplina SERIAL PRIMARY KEY,        -- ID da disciplina (auto incremento)
  nome_disciplina VARCHAR(100) NOT NULL,   -- Nome da disciplina
  nome_professor VARCHAR(100) NOT NULL     -- Nome do professor da disciplina
);

INSERT INTO discipline(nome_disciplina, nome_professor) VALUES
('Matemática', 'Junior'),
('Física', 'Debora'),
('Química', 'Felipe');

SELECT * from discipline



CREATE TABLE license(
  id_matricula SERIAL PRIMARY KEY,         
  id_aluno INT,                         
  id_disciplina INT,                      
  data_matricula DATE NOT NULL,          
  CONSTRAINT fk_aluno FOREIGN KEY (id_aluno) REFERENCES students(id_aluno) ON DELETE CASCADE,  -- Chave estrangeira para 'alunos'
  CONSTRAINT fk_disciplina FOREIGN KEY (id_disciplina) REFERENCES discipline(id_disciplina) ON DELETE CASCADE  -- Chave estrangeira para 'disciplinas'
);

INSERT INTO license (id_aluno, id_disciplina, data_matricula) VALUES
(1, 1, '2024-02-10'),  -- João se matriculou em Matemática
(2, 2, '2024-03-15'),  -- Marcio se matriculou em Física
(3, 3, '2024-04-05'),  -- Carlos se matriculou em Química
(1, 2, '2024-03-20');  -- João se matriculou em Física também

SELECT * from license


SELECT nome, nome_disciplina from students
INNER JOIN discipline
on discipline.id_disciplina = students.id_aluno
